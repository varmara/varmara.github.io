<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog | Marina Varfolomeeva</title>
    <link>https://varmara.github.io/en/post/</link>
      <atom:link href="https://varmara.github.io/en/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Blog</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-uk</language><lastBuildDate>Tue, 15 Jan 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://varmara.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Blog</title>
      <link>https://varmara.github.io/en/post/</link>
    </image>
    
    <item>
      <title>Deploying a hugo-based website on GitHub user pages</title>
      <link>https://varmara.github.io/en/post/2019-01-15-deploying-a-hugo-based-website-on-github-user-pages/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://varmara.github.io/en/post/2019-01-15-deploying-a-hugo-based-website-on-github-user-pages/</guid>
      <description>&lt;p&gt;To host a site on GitHub user pages, its contents should be located on &lt;code&gt;master&lt;/code&gt; branch of the reposotory &lt;code&gt;username.github.io&lt;/code&gt;. A convenient solution would be to store the source code and the site together. I&amp;rsquo;ve googled two schemes. The common starting point is a locally functionining website, created with &lt;code&gt;blogdown&lt;/code&gt; in RStudio (Hugo, Academic theme).&lt;/p&gt;
&lt;h2 id=&#34;1-solution-with-subtrees&#34;&gt;1. Solution with subtrees&lt;/h2&gt;
&lt;p&gt;The first &lt;a href=&#34;https://tolikcode.github.io/post/hugoOnGitHub/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;solution with subtrees&lt;/a&gt; occurred simple enough for me, with my little knowledge of git. But later I&amp;rsquo;ve followed the second, more organized solution.&lt;/p&gt;
&lt;p&gt;One repository with two branches:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;username.github.io&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;source&lt;/code&gt; &amp;mdash; source code + &lt;code&gt;public&lt;/code&gt; folder contents;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;master&lt;/code&gt; &amp;mdash; web-version (only &lt;code&gt;public&lt;/code&gt; folder contents).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Web version is pushed to remote repository with &lt;code&gt;git subtree push&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Main disadvantage&lt;/strong&gt; of this solution &amp;mdash; &lt;code&gt;source&lt;/code&gt; branch contains &lt;code&gt;publi—Å&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;In a blog by Anatoliy (&lt;code&gt;@tolikcode&lt;/code&gt;) there is &lt;a href=&#34;https://tolikcode.github.io/post/hugoOnGitHub/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;an easy to follow setup description&lt;/a&gt;. A deployment process can be automated with a script, &lt;a href=&#34;https://www.hjdskes.nl/blog/update-deploying-hugo-on-personal-gh-pages/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;suggested by Jente Hidskes&lt;/a&gt;. Here I only outline the steps in case I will have to reproduce them later.&lt;/p&gt;
&lt;h3 id=&#34;setup&#34;&gt;Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Initialize an &lt;strong&gt;empty&lt;/strong&gt; git repository and commit something unimportant to &lt;code&gt;master&lt;/code&gt;, e.g. &lt;code&gt;README.md&lt;/code&gt;. Later I&amp;rsquo;ve learned that there is a way to make empty commit.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add README.md
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;initial commit on master&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Create an orphan &lt;code&gt;source&lt;/code&gt; branch for source code. &lt;strong&gt;Remove&lt;/strong&gt; &lt;code&gt;public&lt;/code&gt; folder and commit everything.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout --orphan &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm -rf public &lt;span class=&#34;c1&#34;&gt;## removes public!!!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;initial commit on source branch&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Push everything&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin git@github.com:username/username.github.io.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push origin master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push origin &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Add &lt;code&gt;master&lt;/code&gt; to &lt;code&gt;public&lt;/code&gt; folder as subtree.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git subtree add --prefix&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;public git@github.com:username/username.github.io.git master --squash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;workflow&#34;&gt;workflow&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Make changes to website in RStudio. Get real-time live preview with this command:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;blogdown&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:::&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;serve_site&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;By default, live preview renders everything to &lt;code&gt;public&lt;/code&gt; folder, including drafts.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Generate web-version.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Stop live preview, reloading R session or by &lt;code&gt;servr::daemon_stop(&amp;quot;number, shown by blogdown:::serve_site()&amp;quot;)&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;blogdown&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;hugo_build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Commit changes of the source code to &lt;code&gt;source&lt;/code&gt; branch.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add -A
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;update&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push origin &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Publish the updated website to &lt;code&gt;master&lt;/code&gt; using &lt;code&gt;subtree push&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git subtree push --prefix&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;public https://github.com/tolikcode/tolikcode.github.io.git master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Afterwards the website can be accessed from GitHub user pages &lt;code&gt;http://username.github.io/&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;2-solution-based-on-submodules&#34;&gt;2. Solution based on submodules&lt;/h2&gt;
&lt;p&gt;The second &lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;submodule-based solution&lt;/a&gt; is described in Hugo documentation. At first I could not understand it, but after this &lt;a href=&#34;https://www.youtube.com/watch?v=UQvXst5I41I&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;video about submodules&lt;/a&gt; I worked out how to set up this.&lt;/p&gt;
&lt;p&gt;Two repositories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;username-src&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;master&lt;/code&gt; &amp;mdash; source code.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;username.github.io&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;master&lt;/code&gt; &amp;mdash; web version (only &lt;code&gt;public&lt;/code&gt; folder contents). this repository is added as a submodule to &lt;code&gt;public&lt;/code&gt; folder of the &lt;code&gt;username-src&lt;/code&gt; repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Advantage&lt;/strong&gt; of this solution &amp;mdash; clean history for source code and web version.&lt;/p&gt;
&lt;p&gt;Deployment is automated with a script &lt;code&gt;deploy.sh&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;setup-1&#34;&gt;Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Generate a web version of the site in the project folder.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo -t hugo-academic &lt;span class=&#34;c1&#34;&gt;# If using other theme edit the command to `hugo -t &amp;lt;YOURTHEME&amp;gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Initiailze a git repository in &lt;code&gt;public&lt;/code&gt; sub-folder and push everything.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin git@github.com:username/username.github.io.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;initial commit of website&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Go to the project folder and totally &lt;strong&gt;remove&lt;/strong&gt; &lt;code&gt;public&lt;/code&gt; folder.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm -rf public
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Initialize git repository in the project folder. Add &lt;code&gt;public&lt;/code&gt; to &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin git@github.com:username/username-src.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;public&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; .gitignore
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;initial commit of source code&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Connect a repository with web version as a submodule to &lt;code&gt;public&lt;/code&gt;folder.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule add -b master git@github.com varmara/varmara.github.io.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s1&#34;&gt;&amp;#39;added public as a submodule&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;workflow-1&#34;&gt;Workflow&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Work on website in RStudio. All changes can be previewed.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;blogdown&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:::&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;serve_site&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;–°–∞–π—Ç –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –≤ &lt;code&gt;public&lt;/code&gt;, –Ω–æ –Ω–µ —Å–ø–µ—à–∏—Ç–µ –µ–≥–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ –≥–∏—Ç—Ö–∞–±: –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–Ω–¥–µ—Ä–∏—Ç –≤ —Ç.—á. —á–µ—Ä–Ω–æ–≤–∏–∫–∏. By default, live preview renders everything to &lt;code&gt;public&lt;/code&gt; folder, including drafts.&lt;/p&gt;
&lt;p&gt;All source code changes can be commited to &lt;code&gt;username-src&lt;/code&gt;.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;When time has come to update, generate web-version.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Stop live preview, reloading R session or by &lt;code&gt;servr::daemon_stop(&amp;quot;number, shown by blogdown:::serve_site()&amp;quot;)&lt;/code&gt;. Then execute a script &lt;code&gt;deploy.sh&lt;/code&gt;, which automatically removes outdated contents of &lt;code&gt;public&lt;/code&gt; folder, generates website and commits it to &lt;code&gt;username.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# a script for easy site deploymend from submodule&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# make it executable with chmod +x deploy.sh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Set the English locale for the `date` command.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;LC_TIME&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# The commit message.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;MESSAGE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Site rebuild &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;date&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;\033[0;32mDeploying updates to GitHub...\033[0m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Remove old files in public&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;pushd&lt;/span&gt; public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git rm -rf *
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;popd&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Build the project.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo -t hugo-academic &lt;span class=&#34;c1&#34;&gt;# if using a theme, replace with `hugo -t &amp;lt;YOURTHEME&amp;gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Go To Public folder&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Add changes to git.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Commit changes.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;rebuilding site `date`&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$#&lt;/span&gt; -eq &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;MESSAGE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$MESSAGE&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Push source and build repos.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push origin master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Come Back up to the Project Root&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s all. An updated website can be accessed from GitHub user pages at &lt;code&gt;http://username.github.io/&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hardships of self-archiving</title>
      <link>https://varmara.github.io/en/post/2019-01-12-hardships-of-self-archiving/</link>
      <pubDate>Sat, 12 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://varmara.github.io/en/post/2019-01-12-hardships-of-self-archiving/</guid>
      <description>&lt;p&gt;It was not easy to supplement my publication list with PDFs. Not every version can be self-archived and shared through a personal site &amp;mdash; one should observe publishers&amp;rsquo; rules. Most publishers allow to share only versions prior to copy-editing and type-setting. As I am not an organised person, I rarely kept versions of papers, corrected after peer-review. That&amp;rsquo;s why I will have to thoroughly search for proper versions later.&lt;/p&gt;
&lt;p&gt;I had to collect the information about the journals where I&amp;rsquo;ve published to clear up the confusion. All information bellow is effective at the publication date of the post, consider re-chesking.&lt;/p&gt;
&lt;h2 id=&#34;terms&#34;&gt;Terms&lt;/h2&gt;
&lt;p&gt;Terminology is messy. Sometimes the version prior to peer-review is meant by pre-print, and sometimes post-peer-review version, but I think this may more accurate:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;–†re-print &amp;mdash; a version of the manuscript that was sent to the publisher. Prior peer-review. Without journal formatting.&lt;/li&gt;
&lt;li&gt;Post-print &amp;mdash; a version after peer-review, ready for publication. Most likely without final formatting and copy-editing.&lt;/li&gt;
&lt;li&gt;–†ublishers version &amp;mdash; a version, published on a journal&amp;rsquo;s site. With journal formatting. Has bibliographic information (page-numbers, etc.).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-main-resource&#34;&gt;The main resource&lt;/h2&gt;
&lt;p&gt;It is possible to check up journals&amp;rsquo; self-archiving policies at a singe resource &lt;a href=&#34;http://www.sherpa.ac.uk/romeo/index.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sherpa/RoMEO&lt;/a&gt;. But anyway one should revise the rules on a publisher&amp;rsquo;s or journal&amp;rsquo;s site.&lt;/p&gt;
&lt;h2 id=&#34;selected-journals&#34;&gt;Selected journals&lt;/h2&gt;
&lt;h3 id=&#34;inter-researchhttpswwwint-rescomhome&#34;&gt;&lt;a href=&#34;https://www.int-res.com/home/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Inter-Research&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;pdf of the paper may be freely accessed from the publisher&amp;rsquo;s web site, and can be linked directly. However, the publisher&amp;rsquo;s version itself cannot be used earlier than 5 years after publication.&lt;/p&gt;
&lt;h4 id=&#34;diseases-of-aquatic-organismshttpswwwint-rescomjournalsdaodao-home&#34;&gt;&lt;a href=&#34;https://www.int-res.com/journals/dao/dao-home/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Diseases of Aquatic Organisms&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://www.sherpa.ac.uk/romeo/issn/0177-5103/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DAO on Sherpa/RoMEO&lt;/a&gt;: post-print can be published on personal site immediately, in a repository - after 12 months, publishers version &amp;mdash; in 5 years. A link to the published version and publisher&amp;rsquo;s copyright is required.&lt;/p&gt;
&lt;h4 id=&#34;marine-ecology-progress-serieshttpswwwint-rescomjournalsmepsmeps-home&#34;&gt;&lt;a href=&#34;https://www.int-res.com/journals/meps/meps-home/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Marine Ecology Progress Series&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://www.sherpa.ac.uk/romeo/issn/0171-8630/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MEPS on Sherpa/RoMEO&lt;/a&gt;: post-print can be published on personal site immediately, in a repository - after 12 months, publishers version &amp;mdash; in 5 years. A link to the published version and publisher&amp;rsquo;s copyright is required.&lt;/p&gt;
&lt;h3 id=&#34;st-petersburg-university-pressst-petersburg-university-press&#34;&gt;[St. Petersburg University Press](St. Petersburg University Press)&lt;/h3&gt;
&lt;p&gt;I could not find a common self-archiving policy on a publisher&amp;rsquo;s site.&lt;/p&gt;
&lt;h4 id=&#34;biological-communicationshttpsbiocommspburu&#34;&gt;&lt;a href=&#34;https://biocomm.spbu.ru/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Biological Communications&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Open-access journal. pdf is freely available on journal&amp;rsquo;s site and can be linked directly.&lt;/p&gt;
&lt;h3 id=&#34;springer-verlaghttpwwwspringerlinkcommudmp&#34;&gt;&lt;a href=&#34;http://www.springerlink.com/?MUD=MP&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Springer Verlag&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Clear and concise &lt;a href=&#34;https://www.springer.com/gp/open-access/authors-rights/self-archiving-policy/2124&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;self-archiving policy&lt;/a&gt; can be found on a publisher&amp;rsquo;s web site. There is also a section on &lt;a href=&#34;https://www.springer.com/gp/open-access/authors-rights&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;author&amp;rsquo;s rights&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Post-print is called an Author&amp;rsquo;s Accepted Manuscript (AAM): &amp;ldquo;&amp;hellip;the version accepted for publication in a journal following peer review but &lt;strong&gt;prior to copyediting and typesetting&lt;/strong&gt;&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Pre- and post-prints should be shared with a special phrase which contains a link to the publisher and DOI:&lt;/p&gt;
&lt;p&gt;‚ÄúThis is a [pre-print / post-peer-review, pre-copyedit version] of an article published in [insert journal title]. The final authenticated version is available online at: &lt;code&gt;https://doi.org/[insert DOI]&lt;/code&gt;‚Äù&lt;/p&gt;
&lt;h4 id=&#34;hydrobiologiahttpslinkspringercomjournal10750&#34;&gt;&lt;a href=&#34;https://link.springer.com/journal/10750&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hydrobiologia&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://www.sherpa.ac.uk/romeo/issn/0018-8158/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hydrobiologia on Sherpa/RoMEO&lt;/a&gt;: post-print can be published on personal site immediately, in a repository - after 12 months. Publishers version cannot be used. Needs a link to the publisher and special phrase with DOI.&lt;/p&gt;
&lt;h4 id=&#34;oecologiahttpslinkspringercomjournal442&#34;&gt;&lt;a href=&#34;https://link.springer.com/journal/442&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Oecologia&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://www.sherpa.ac.uk/romeo/issn/0029-8549/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Oecologia on Sherpa/RoMEO&lt;/a&gt;: post-print can be published on personal site immediately, in a repository - after 12 months. Publishers version cannot be used. Needs a link to the publisher and special phrase with DOI.&lt;/p&gt;
&lt;h3 id=&#34;cambridge-university-presshttpwwwcambridgeorguk&#34;&gt;&lt;a href=&#34;http://www.cambridge.org/uk/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cambridge University Press&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I did not succeed in finding a self-archiving policy on the publisher&amp;rsquo;s site. May be it is called somehow differently.&lt;/p&gt;
&lt;h4 id=&#34;journal-of-the-marine-biological-association-of-the-united-kingdomhttpjournalscambridgeorgactiondisplayjournaljidmbi&#34;&gt;&lt;a href=&#34;http://journals.cambridge.org/action/displayJournal?jid=MBI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Journal of the Marine Biological Association of the United Kingdom&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://www.sherpa.ac.uk/romeo/issn/0025-3154/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JMBA on Sherpa/RoMEO&lt;/a&gt;: post-print can be published on personal site immediately, in a repository - after 6 months. Publishers version cannot be used. Abstract can be used. Needs a link to the publisher.&lt;/p&gt;
&lt;h3 id=&#34;elsevierhttpwwwelseviercom&#34;&gt;&lt;a href=&#34;http://www.elsevier.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Elsevier&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.elsevier.com/about/policies/sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sharing policy&lt;/a&gt; is hard to find.&lt;/p&gt;
&lt;h4 id=&#34;journal-of-experimental-marine-biology-and-ecologyhttpswwwjournalselseviercomjournal-of-experimental-marine-biology-and-ecology&#34;&gt;&lt;a href=&#34;https://www.journals.elsevier.com/journal-of-experimental-marine-biology-and-ecology&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Journal of Experimental Marine Biology and Ecology&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://www.sherpa.ac.uk/romeo/issn/0022-0981/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JEMBE on Sherpa/RoMEO&lt;/a&gt;: post-print can be published on personal site immediately, in a repository - after 24 months. Publishers version cannot be used. Needs a link to the publisher with DOI. Post print should be licenced by CC BY-NC-ND. Post-print &lt;a href=&#34;https://www.elsevier.com/about/policies/sharing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;should not look similar to published version&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
